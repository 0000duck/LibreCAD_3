diff --git a/lckernel/CMakeLists.txt b/lckernel/CMakeLists.txt
index 5496ba2..86f5e3d 100644
--- a/lckernel/CMakeLists.txt
+++ b/lckernel/CMakeLists.txt
@@ -17,6 +17,7 @@ cad/functions/ftrim.cpp
 cad/functions/intersect.cpp
 cad/geometry/geoarc.cpp
 cad/geometry/geocircle.cpp
+cad/geometry/geocoordinate.cpp
 cad/geometry/geodimaligned.cpp
 cad/geometry/geodimangular.cpp
 cad/geometry/geodimdiametric.cpp
diff --git a/lckernel/cad/geometry/geocoordinate.cpp b/lckernel/cad/geometry/geocoordinate.cpp
new file mode 100644
index 0000000..e5149cb
--- /dev/null
+++ b/lckernel/cad/geometry/geocoordinate.cpp
@@ -0,0 +1,11 @@
+#include "geocoordinate.h"
+#include "cad/math/lcmath.h"
+
+using namespace lc;
+using namespace geo;
+
+double Coordinate::angleBetween(const Coordinate& v1, const Coordinate& v2) const {
+    Coordinate vStart(v1 - (*this));
+    Coordinate vEnd(v2 - (*this));
+    return Math::correctAngle(atan2(vStart.x() * vEnd.y() - vStart.y() * vEnd.x(), vStart.x() * vEnd.x() + vStart.y() * vEnd.y()));
+}
diff --git a/lckernel/cad/geometry/geocoordinate.h b/lckernel/cad/geometry/geocoordinate.h
index f108a1a..2a028f9 100644
--- a/lckernel/cad/geometry/geocoordinate.h
+++ b/lckernel/cad/geometry/geocoordinate.h
@@ -3,7 +3,6 @@
 
 #include "cad/const.h"
 #include <cmath>
-#include <cad/math/lcmath.h>
 
 namespace lc {
     namespace geo {
@@ -44,11 +43,7 @@ namespace lc {
                  * @return The angle from between two vectors using the current vector as the center
                  * return 0, if the angle is not well defined
                  */
-                double angleBetween(const Coordinate& v1, const Coordinate& v2) const {
-                    Coordinate vStart(v1 - (*this));
-                    Coordinate vEnd(v2 - (*this));
-                    return Math::correctAngle(atan2(vStart.x() * vEnd.y() - vStart.y() * vEnd.x(), vStart.x() * vEnd.x() + vStart.y() * vEnd.y()));
-                }
+                double angleBetween(const Coordinate& v1, const Coordinate& v2) const;
 
 
                 inline bool operator==(const Coordinate& coord) const {
